d2$pre <- predict(f)
d2
d2$diff <- d2$pre - d2$price
d2[order(d2$diff),]
d2[order(d2$diff, decreasing = T),]
?predict
summary(f)
predict(f, newdata = c('Nissan', 4, -4000, 1))
predict(f, newdata = data.frame(brand='Nissan', yearc=2009-2005, milagec=95746-100000, leather=1))
install.packages('wordcloud')
library(wordcloud)
ch <- 1:22
chv <- (1:22ï¼‰*5
m = 300
m0 <- 300 + chv + rnorm(n=22)r
m0 <- 300 + chv + rnorm(n=22)
m0
m0 <- sapply(1:100, 300 + chv + rnorm(n=22))
m0 <- sapply(1:100, function(x){300 + chv + rnorm(n=22)})
m0
svd(m0)
s = svd(m0)
str(s)
d
s$d
str(s)
s$u
diag(s$d) %*% u
diag(s$d) %*% s$u
s$v %*% diag(s$d) %*% s$u
(s$v %*% diag(s$d) %*% s$u)[1:10,1:10]
m0[1:10,1:10]
(s$v %*% diag(s$d) %*% t(s$u))[1:10,1:10]
str(d)
identical((s$v %*% diag(s$d) %*% t(s$u)),t(m0))
range((s$v %*% diag(s$d) %*% t(s$u)) - t(m0))
boxplot(m0)
boxplot(t(m0))
m0 <- t(sapply(1:100, function(x){300 + chv + rnorm(n=22)}))
boxplot(m0)
s = svd(m0)
str(s)
v[,1]
s$v[,1]
scale(m0)
rowSums(scale(m0))
colSums(scale(m0))
m0s <- scale(m0)
boxplot(m0s)
m0c <- m0 - median(m0)
boxplot(m0s)
boxplot(m0c)
s = svd(m0c)
s$v[,1]
m0c %*% s$v[,1]
s$v
s$v[,1]
s$v[,1] %*% t(s$v[,1])
t(s$v[,1]) %*% (s$v[,1])
s$v[,1] * s$d[1]
s$v[,2] * s$d[2]
m0n = m0n - s$v[,1] * s$d[1]
m0n = m0c - s$v[,1] * s$d[1]
boxplot(m0n)
m0n = m0c - s$v[,1:2] * s$d[1:2]
boxplot(m0n)
m0n = m0c - s$v[,1] * s$d[1] - s$v[,2] * s$d[2]
boxplot(m0n)
version()
sessionInfo()
setwd("C:/Users/sunli/Desktop/Feiya/math anxiety/")
d0 <- read.csv('PISA2012_USA_recode.csv', header=T)
vmap <- read.csv('Variable PISA2012.csv', header = F, stringsAsFactors = F)
mav <- vmap$V1[grepl('Maths Anxiety', vmap$V2)]
mscv <- vmap$V1[grepl('Maths Self-Concept', vmap$V2)]
mbv <- vmap$V1[grepl('Maths Behaviour', vmap$V2)]
miv <- vmap$V1[grepl('Maths Interest', vmap$V2)]
msev <- vmap$V1[grepl('Maths Self-Efficacy', vmap$V2)]
d1 <- d0[, names(d0) %in% c(mav, mscv, miv, msev)]
sapply(d1, function(x)sum(is.na(x)))
sapply(d1, function(x)sum(x %in% c(7,8,9)))
for(i in 1:ncol(d1)){
v0 <- d1[,i]
v0[v0>=7] <- NA
d1[,i] <- factor(v0)
}
sum(complete.cases(d1))
d1c <- d1[complete.cases(d1),]
d1c$a <- apply(d1c[, mav],1,function(x)mean(as.numeric(x)))
d1c$sc <- apply(d1c[, mscv],1,function(x)mean(as.numeric(x)))
d1c$i <- apply(d1c[, miv],1,function(x)mean(as.numeric(x)))
d1c$se <- apply(d1c[, msev],1,function(x)mean(as.numeric(x)))
library(tidyLPA)
library(tidyverse)
d1c[,c('a','i','sc','se')] %>%
estimate_profiles(1:10) %>%
plot_profiles()
d1c[,c('a','i','sc','se')] %>%
estimate_profiles(6) %>%
plot_profiles()
d1c[,c('a','i','sc')] %>%
estimate_profiles(1:6)
estimate_profiles(1:6)
d1c[,c('a','i','sc')] %>%
estimate_profiles(5) %>%
plot_profiles()
d1c[,c('a','i','se')] %>%
estimate_profiles(1:6)
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:6,
variances = c("equal", "varying"),
covariances = c("zero", "varying"))
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:6,
variances = c("varying"),
covariances = c("zero"))
d1c[,c('a','i','sc')] %>%
estimate_profiles(5,
variances = c("equal","varying"),
covariances = c("zero","varying","zero","varying"))
d1c[,c('a','i','sc')] %>%
estimate_profiles(5,
variances = c("equal", "equal", "varying", "varying"),
covariances = c("zero","varying","zero","varying"))
d1c[,c('a','i','sc')] %>%
estimate_profiles(5,
variances = c("equal", "varying", "varying"),
covariances = c("zero","zero","varying"))
d1c[,c('a','i','sc')] %>%
estimate_profiles(5,
variances = c("equal", "varying"),
covariances = c("zero","zero")) %>%
plot_profiles()
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:5,
variances = c("equal"),
covariances = c("equal"))
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:7,
variances = c("equal"),
covariances = c("equal"))
# model 2
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:7,
variances = c("varying"),
covariances = c("zero"))
# model 3
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:7,
variances = c("equal"),
covariances = c("equal"))
# model 1
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:7,
variances = c("equal"),
covariances = c("zero"))
?estimate_profiles
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:7,
variances = c("varying"),
covariances = c("equal"),
package="MplusAutomation")
# model 5
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:7,
variances = c("equal"),
covariances = c("varying"),
package="MplusAutomation")
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:7,
variances = c("varying"),
covariances = c("varying"),
package="MplusAutomation")
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:7,
variances = c("varying"),
covariances = c("zero"),
package="MplusAutomation")
# The best model is model 2.
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:7,
variances = c("varying"),
covariances = c("zero"),
package="MplusAutomation")
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:7,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
?plot_profiles
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:5,
variances = c("varying"),
covariances = c("zero"),
package="MplusAutomation") %>%
plot_profiles(rawdata = F)
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:5,
variances = c("varying"),
covariances = c("zero"),
package="MplusAutomation") %>%
plot_profiles(rawdata = F, col=c('black','red','green','blue','yellow'))
d1c[,c('a','i','sc')] %>%
estimate_profiles(3:5,
variances = c("varying"),
covariances = c("zero"),
package="mclust") %>%
plot_profiles(rawdata = F, col=c('black','red','green','blue','yellow'))
ms <- d1c[,c('a','i','sc')] %>%
estimate_profiles(2:5,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
ms <- d1c[,c('a','i','sc')] %>%
estimate_profiles(2:5,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
ms
m4 <- d1c[,c('a','i','sc')] %>%
estimate_profiles(4,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
get_data(m4)
plot_profiles(m4)
plot_profiles(m4,rawdata = F)
d4 <- get_data(m4)
head(d1c)
df1 <- cbind(d1c, d4)
mbv
vmap
my <- c('PV1MATH','PV2MATH','PV3MATH','PV4MATH','PV5MATH')
setwd("C:/Users/sunli/Desktop/Feiya/math anxiety/")
d0 <- read.csv('PISA2012_USA_recode.csv', header=T)
vmap <- read.csv('Variable PISA2012.csv', header = F, stringsAsFactors = F)
my <- c('PV1MATH','PV2MATH','PV3MATH','PV4MATH','PV5MATH')
mav <- vmap$V1[grepl('Maths Anxiety', vmap$V2)]
mscv <- vmap$V1[grepl('Maths Self-Concept', vmap$V2)]
mbv <- vmap$V1[grepl('Maths Behaviour', vmap$V2)]
miv <- vmap$V1[grepl('Maths Interest', vmap$V2)]
msev <- vmap$V1[grepl('Maths Self-Efficacy', vmap$V2)]
d1 <- d0[, names(d0) %in% c(mav, mscv, miv, msev, mbv, my)]
sapply(d1, function(x)sum(is.na(x)))
sapply(d1, function(x)sum(x %in% c(7,8,9)))
complete.cases(d0)
sum(complete.cases(d0))
sapply(d1, function(x)sum(x %in% c(7,8,9)))
table(d0$PV1MATH)
range(d0$PV1MATH)
sapply(d1, function(x)sum(is.na(x)))
hist(d1$PV1MATH)
hist(d1$PV2MATH)
hist(d1$PV3MATH)
hist(d1$PV4MATH)
hist(d1$PV5MATH)
names(d1)
sapply(d1, function(x)sum(x %in% c(7,8,9)))
for(i in 1:29){
v0 <- d1[,i]
v0[v0>=7] <- NA
d1[,i] <- factor(v0)
}
sapply(d1, function(x)sum(is.na(x)))
sum(complete.cases(d1))
setwd("C:/Users/sunli/Desktop/Feiya/math anxiety/")
d0 <- read.csv('PISA2012_USA_recode.csv', header=T)
vmap <- read.csv('Variable PISA2012.csv', header = F, stringsAsFactors = F)
my <- c('PV1MATH','PV2MATH','PV3MATH','PV4MATH','PV5MATH')
mav <- vmap$V1[grepl('Maths Anxiety', vmap$V2)]
mscv <- vmap$V1[grepl('Maths Self-Concept', vmap$V2)]
mbv <- vmap$V1[grepl('Maths Behaviour', vmap$V2)]
miv <- vmap$V1[grepl('Maths Interest', vmap$V2)]
msev <- vmap$V1[grepl('Maths Self-Efficacy', vmap$V2)]
d1 <- d0[, names(d0) %in% c(mav, mscv, miv, mbv, my)]
sapply(d1, function(x)sum(is.na(x)))
sapply(d1, function(x)sum(x %in% c(7,8,9)))
for(i in 1:29){
v0 <- d1[,i]
v0[v0>=7] <- NA
d1[,i] <- factor(v0)
}
names(d1)
msev
setwd("C:/Users/sunli/Desktop/Feiya/math anxiety/")
d0 <- read.csv('PISA2012_USA_recode.csv', header=T)
vmap <- read.csv('Variable PISA2012.csv', header = F, stringsAsFactors = F)
my <- c('PV1MATH','PV2MATH','PV3MATH','PV4MATH','PV5MATH')
mav <- vmap$V1[grepl('Maths Anxiety', vmap$V2)]
mscv <- vmap$V1[grepl('Maths Self-Concept', vmap$V2)]
mbv <- vmap$V1[grepl('Maths Behaviour', vmap$V2)]
miv <- vmap$V1[grepl('Maths Interest', vmap$V2)]
msev <- vmap$V1[grepl('Maths Self-Efficacy', vmap$V2)]
d1 <- d0[, names(d0) %in% c(mav, mscv, miv, msev, mbv, my)]
sapply(d1, function(x)sum(is.na(x)))
sapply(d1, function(x)sum(x %in% c(7,8,9)))
for(i in 1:21){
v0 <- d1[,i]
v0[v0>=7] <- NA
d1[,i] <- factor(v0)
}
sum(complete.cases(d1))
setwd("C:/Users/sunli/Desktop/Feiya/math anxiety/")
d0 <- read.csv('PISA2012_USA_recode.csv', header=T)
vmap <- read.csv('Variable PISA2012.csv', header = F, stringsAsFactors = F)
my <- c('PV1MATH','PV2MATH','PV3MATH','PV4MATH','PV5MATH')
mav <- vmap$V1[grepl('Maths Anxiety', vmap$V2)]
mscv <- vmap$V1[grepl('Maths Self-Concept', vmap$V2)]
mbv <- vmap$V1[grepl('Maths Behaviour', vmap$V2)]
miv <- vmap$V1[grepl('Maths Interest', vmap$V2)]
msev <- vmap$V1[grepl('Maths Self-Efficacy', vmap$V2)]
d1 <- d0[, names(d0) %in% c(mav, mscv, miv, msev, mbv, my)]
sapply(d1, function(x)sum(is.na(x)))
sapply(d1, function(x)sum(x %in% c(7,8,9)))
for(i in 1:21){
v0 <- d1[,i]
v0[v0>=7] <- NA
d1[,i] <- factor(v0)
}
sum(complete.cases(d1))
d1c <- d1[complete.cases(d1),]
sapply(d1, function(x)sum(x %in% c(7,8,9)))
setwd("C:/Users/sunli/Desktop/Feiya/math anxiety/")
d0 <- read.csv('PISA2012_USA_recode.csv', header=T)
vmap <- read.csv('Variable PISA2012.csv', header = F, stringsAsFactors = F)
my <- c('PV1MATH','PV2MATH','PV3MATH','PV4MATH','PV5MATH')
mav <- vmap$V1[grepl('Maths Anxiety', vmap$V2)]
mscv <- vmap$V1[grepl('Maths Self-Concept', vmap$V2)]
mbv <- vmap$V1[grepl('Maths Behaviour', vmap$V2)]
miv <- vmap$V1[grepl('Maths Interest', vmap$V2)]
msev <- vmap$V1[grepl('Maths Self-Efficacy', vmap$V2)]
d1 <- d0[, names(d0) %in% c(mav, mscv, miv, msev, mbv, my)]
sapply(d1, function(x)sum(is.na(x)))
sapply(d1, function(x)sum(x %in% c(7,8,9)))
names(d1)
msev
setwd("C:/Users/sunli/Desktop/Feiya/math anxiety/")
d0 <- read.csv('PISA2012_USA_recode.csv', header=T)
vmap <- read.csv('Variable PISA2012.csv', header = F, stringsAsFactors = F)
my <- c('PV1MATH','PV2MATH','PV3MATH','PV4MATH','PV5MATH')
mav <- vmap$V1[grepl('Maths Anxiety', vmap$V2)]
mscv <- vmap$V1[grepl('Maths Self-Concept', vmap$V2)]
mbv <- vmap$V1[grepl('Maths Behaviour', vmap$V2)]
miv <- vmap$V1[grepl('Maths Interest', vmap$V2)]
msev <- vmap$V1[grepl('Maths Self-Efficacy', vmap$V2)]
d1 <- d0[, names(d0) %in% c(mav, mscv, miv, mbv, my, msev)]
sapply(d1, function(x)sum(is.na(x)))
sapply(d1, function(x)sum(x %in% c(7,8,9)))
names(d1)
for(i in 1:21){
v0 <- d1[,i]
v0[v0>=7] <- NA
d1[,i] <- factor(v0)
}
sum(complete.cases(d1))
d1c <- d1[complete.cases(d1),]
sapply(d1, function(x)sum(is.na(x)))
sapply(d1, function(x)sum(x %in% c(7,8,9)))
mbv
hist(d1$ST49Q01)
hist(d1$ST49Q02)
setwd("C:/Users/sunli/Desktop/Feiya/math anxiety/")
d0 <- read.csv('PISA2012_USA_recode.csv', header=T)
vmap <- read.csv('Variable PISA2012.csv', header = F, stringsAsFactors = F)
my <- c('PV1MATH','PV2MATH','PV3MATH','PV4MATH','PV5MATH')
mav <- vmap$V1[grepl('Maths Anxiety', vmap$V2)]
mscv <- vmap$V1[grepl('Maths Self-Concept', vmap$V2)]
mbv <- vmap$V1[grepl('Maths Behaviour', vmap$V2)]
miv <- vmap$V1[grepl('Maths Interest', vmap$V2)]
msev <- vmap$V1[grepl('Maths Self-Efficacy', vmap$V2)]
d1 <- d0[, names(d0) %in% c(mav, mscv, miv, mbv, my, msev)]
sapply(d1, function(x)sum(is.na(x)))
sapply(d1, function(x)sum(x %in% c(7,8,9)))
for(i in 1:29){
v0 <- d1[,i]
v0[v0>=7] <- NA
d1[,i] <- factor(v0)
}
sum(complete.cases(d1))
d1c <- d1[complete.cases(d1),]
library(poLCA)
MAV
mav
mbv
mscv
msev
################### Use mean of each construct
d1c$a <- apply(d1c[, mav],1,function(x)mean(as.numeric(x)))
d1c$sc <- apply(d1c[, mscv],1,function(x)mean(as.numeric(x)))
d1c$i <- apply(d1c[, miv],1,function(x)mean(as.numeric(x)))
d1c$se <- apply(d1c[, msev],1,function(x)mean(as.numeric(x)))
d1c$b <- apply(d1c[, mbv],1,function(x)mean(as.numeric(x)))
mbv
d1c$y <- apply(d1c[, my],1,function(x)mean(as.numeric(x)))
head(d1c)
library(tidyLPA)
library(tidyverse)
ms <- d1c[,c('a','i','sc')] %>%
estimate_profiles(2:5,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
d1c[,c('a','i','sc')] %>%
estimate_profiles(2:5,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
d1c[,c('a','i','sc')] %>%
estimate_profiles(5,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
d1c[,c('a','i','sc')]
d1c[,c('a','i','sc')] %>%
estimate_profiles(3,
variances = c("equal"),
covariances = c("zero"),
package="mclust")
d1c[,c('a','i','sc')] %>%
estimate_profiles(4,
variances = c("equal"),
covariances = c("zero"),
package="mclust")
d1c[,c('a','i','sc')] %>%
estimate_profiles(4,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
d1c[,c('a','i','sc')] %>%
estimate_profiles(2,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
d1c <- d1[complete.cases(d1[,c(mav,msc,miv)]),]
d1c <- d1[complete.cases(d1[,c(mav,mscv,miv)]),]
dim(d1c)
################### Use mean of each construct
d1c$a <- apply(d1c[, mav],1,function(x)mean(as.numeric(x)))
d1c$sc <- apply(d1c[, mscv],1,function(x)mean(as.numeric(x)))
d1c$i <- apply(d1c[, miv],1,function(x)mean(as.numeric(x)))
library(tidyLPA)
library(tidyverse)
ms <- d1c[,c('a','i','sc')] %>%
estimate_profiles(2:6,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
ms
ms4 <- d1c[,c('a','i','sc')] %>%
estimate_profiles(4,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
plot_profiles(ms4)
plot_profiles(ms4, rawdata=F)
get_data(ms4)
d2c <- cbind(d1c,get_data(ms4))
head(d2c)
library(ggplot2)
sum(complete.cases(d2c[, my]))
d2c$y <- apply(d2c[, my],1,function(x)mean(as.numeric(x)))
hist(d2c$y)
ggplot(d2c, aes(classes_number, y)) + geom_boxplot()
ggplot(d2c, aes(class, y)) + geom_boxplot()
names(d2c)
d1c <- d1[complete.cases(d1[,c(mav,mscv,miv)]),]
head(d1c)
################### Use mean of each construct
d1c$a <- apply(d1c[, mav],1,function(x)mean(as.numeric(x)))
d1c$sc <- apply(d1c[, mscv],1,function(x)mean(as.numeric(x)))
d1c$i <- apply(d1c[, miv],1,function(x)mean(as.numeric(x)))
d1c$y <- apply(d1c[, my],1,function(x)mean(as.numeric(x)))
ms4 <- d1c[,c('a','i','sc')] %>%
estimate_profiles(4,
variances = c("varying"),
covariances = c("zero"),
package="mclust")
ms4
plot_profiles(ms4, rawdata=F)
d2c <- cbind(d1c,get_data(ms4)[,c('class')])
get_data(ms4)[,c('class')]
get_data(ms4)
d2c <- cbind(d1c$y,get_data(ms4))
library(ggplot2)
ggplot(d2c, aes(class, y)) + geom_boxplot()
head(d2c)
names(d2c)[1] <- 'y'
library(ggplot2)
ggplot(d2c, aes(class, y)) + geom_boxplot()
ggplot(d2c, aes(class, y=y)) + geom_boxplot()
ggplot(d2c, aes(x=Class, y=y)) + geom_boxplot()
ggplot(d2c, aes(x=factor(Class), y=y)) + geom_boxplot()
plot_profiles(ms4, rawdata=F)
ggplot(d2c, aes(x=factor(Class), y=y)) + geom_boxplot()
str(d2c)
d2c$class <- factor(d2c$class, levels = 1:4)
ggplot(d2c, aes(x=Class, y=y)) + geom_boxplot()
str(d2c)
ggplot(d2c, aes(x=class, y=y)) + geom_boxplot()
d2c$class <- factor(d2c$Class, levels = 1:4)
str(d2c)
d2c <- cbind(d1c$y,get_data(ms4))
names(d2c)[1] <- 'y'
str(d2c)
d2c$Class <- factor(d2c$Class, levels = 1:4)
str(d2c)
ggplot(d2c, aes(x=class, y=y)) + geom_boxplot()
ggplot(d2c, aes(x=Class, y=y)) + geom_boxplot()
aov(y~Class, data=d2c)
af <- aov(y~Class, data=d2c)
af
TukeyHSD(x=af, 'Class', conf.level=0.95)
